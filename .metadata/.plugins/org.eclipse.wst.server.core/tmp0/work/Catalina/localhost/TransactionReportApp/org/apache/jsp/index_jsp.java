/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.109
 * Generated at: 2025-09-19 10:18:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import model.Transaction;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.Transaction");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    List<Transaction> transactions = (List<Transaction>) request.getAttribute("transactions");
    String fromDate = request.getParameter("fromDate") != null ? request.getParameter("fromDate") : "";
    String toDate   = request.getParameter("toDate") != null ? request.getParameter("toDate") : "";
    String minAmt   = request.getParameter("minAmt") != null ? request.getParameter("minAmt") : "";
    String maxAmt   = request.getParameter("maxAmt") != null ? request.getParameter("maxAmt") : "";
    String accountNumber = request.getParameter("accountNumber") != null ? request.getParameter("accountNumber") : "";
    String ifscCode     = request.getParameter("ifscCode") != null ? request.getParameter("ifscCode") : "";
    String status       = request.getParameter("status") != null ? request.getParameter("status") : "";

    Integer currentPage = (Integer) request.getAttribute("currentPage");
    Integer totalPages = (Integer) request.getAttribute("totalPages");
    if (currentPage == null) currentPage = 1;
    if (totalPages == null) totalPages = 1;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Transaction Report</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body { background: linear-gradient(120deg, #f6f9fc, #eef2f7); }\r\n");
      out.write("        .card { border-radius: 15px; box-shadow: 0 6px 18px rgba(0,0,0,0.1); transition: transform 0.3s ease-in-out; }\r\n");
      out.write("        .card:hover { transform: translateY(-5px); }\r\n");
      out.write("        table { animation: fadeIn 1s ease-in-out; }\r\n");
      out.write("        @keyframes fadeIn { from {opacity:0;} to {opacity:1;} }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container py-4\">\r\n");
      out.write("    <div class=\"card p-4\">\r\n");
      out.write("        <h2 class=\"text-center mb-4\">💳 Transaction Report</h2>\r\n");
      out.write("\r\n");
      out.write("        <!-- Filter Form -->\r\n");
      out.write("        <form action=\"ReportServlet\" method=\"post\" class=\"row g-3 mb-4\" id=\"filterForm\">\r\n");
      out.write("            <input type=\"hidden\" name=\"page\" value=\"");
      out.print(currentPage);
      out.write("\">\r\n");
      out.write("            <div class=\"col-md-2\">\r\n");
      out.write("                <label class=\"form-label\">From Date *</label>\r\n");
      out.write("                <input type=\"date\" name=\"fromDate\" class=\"form-control\" required value=\"");
      out.print(fromDate);
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-2\">\r\n");
      out.write("                <label class=\"form-label\">To Date *</label>\r\n");
      out.write("                <input type=\"date\" name=\"toDate\" class=\"form-control\" required value=\"");
      out.print(toDate);
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-2\">\r\n");
      out.write("                <label class=\"form-label\">Min Amount</label>\r\n");
      out.write("                <input type=\"number\" step=\"0.01\" name=\"minAmt\" class=\"form-control\" value=\"");
      out.print(minAmt);
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-2\">\r\n");
      out.write("                <label class=\"form-label\">Max Amount</label>\r\n");
      out.write("                <input type=\"number\" step=\"0.01\" name=\"maxAmt\" class=\"form-control\" value=\"");
      out.print(maxAmt);
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-2\">\r\n");
      out.write("                <label class=\"form-label\">Account Number</label>\r\n");
      out.write("                <input type=\"text\" name=\"accountNumber\" class=\"form-control\" value=\"");
      out.print(accountNumber);
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-2\">\r\n");
      out.write("                <label class=\"form-label\">IFSC Code</label>\r\n");
      out.write("                <input type=\"text\" name=\"ifscCode\" class=\"form-control\" value=\"");
      out.print(ifscCode);
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-2\">\r\n");
      out.write("                <label class=\"form-label\">Payment Status</label>\r\n");
      out.write("                <select name=\"status\" class=\"form-select\">\r\n");
      out.write("                    <option value=\"\">All</option>\r\n");
      out.write("                    <option value=\"Success\" ");
      out.print( "Success".equals(status)?"selected":"" );
      out.write(">Success</option>\r\n");
      out.write("                    <option value=\"Pending\" ");
      out.print( "Pending".equals(status)?"selected":"" );
      out.write(">Pending</option>\r\n");
      out.write("                    <option value=\"Failed\" ");
      out.print( "Failed".equals(status)?"selected":"" );
      out.write(">Failed</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-12 text-center\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary px-4\">🔍 Submit</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <!-- Results -->\r\n");
      out.write("        ");
 if (transactions != null && !transactions.isEmpty()) { 
      out.write("\r\n");
      out.write("            <div class=\"d-flex justify-content-between mb-3\">\r\n");
      out.write("                <h5>Showing ");
      out.print( transactions.size() );
      out.write(" records (Page ");
      out.print( currentPage );
      out.write(" of ");
      out.print( totalPages );
      out.write(")</h5>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <a href=\"ExcelExportServlet\" class=\"btn btn-success btn-sm\">⬇️ Export Excel</a>\r\n");
      out.write("                    <a href=\"PdfExportServlet\" class=\"btn btn-danger btn-sm\">⬇️ Export PDF</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"table-responsive\">\r\n");
      out.write("                <table class=\"table table-hover table-bordered align-middle\">\r\n");
      out.write("                    <thead class=\"table-dark\">\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th>ID</th><th>Account No</th><th>IFSC</th><th>Beneficiary</th><th>Sender</th>\r\n");
      out.write("                            <th>Date</th><th>Amount</th><th>Currency</th><th>Mode</th><th>Status</th>\r\n");
      out.write("                            <th>Reference</th><th>UTR</th><th>Branch</th><th>Description</th><th>Remarks</th>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </thead>\r\n");
      out.write("                    <tbody>\r\n");
      out.write("                        ");
 for (Transaction t : transactions) { 
      out.write("\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td>");
      out.print( t.getTransactionId() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getAccountNumber() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getIfscCode() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getBeneficiaryName() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getSenderName() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getTransactionDate()!=null? new java.text.SimpleDateFormat("dd-MM-yyyy").format(t.getTransactionDate()) : "" );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getAmount() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getCurrency() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getMode() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getStatus() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getReferenceNumber() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getUtrNumber() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getBranch() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getDescription() );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( t.getRemarks() );
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("<!-- Pagination Controls -->\r\n");
      out.write("<div class=\"mt-3 text-center\">\r\n");
      out.write("    <nav>\r\n");
      out.write("        <ul class=\"pagination justify-content-center\">\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            <li class=\"page-item ");
      out.print( (currentPage == 1) ? "disabled" : "" );
      out.write("\">\r\n");
      out.write("                <button class=\"page-link\" onclick=\"submitPage(");
      out.print( currentPage - 1 );
      out.write(")\">Previous</button>\r\n");
      out.write("            </li>\r\n");
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            <li class=\"page-item active\">\r\n");
      out.write("                <span class=\"page-link\">");
      out.print( currentPage );
      out.write("</span>\r\n");
      out.write("            </li>\r\n");
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            <li class=\"page-item ");
      out.print( (currentPage.equals(totalPages)) ? "disabled" : "" );
      out.write("\">\r\n");
      out.write("                <button class=\"page-link\" onclick=\"submitPage(");
      out.print( currentPage + 1 );
      out.write(")\">Next</button>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("            <p class=\"text-center mt-3\">No transactions found.</p>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    function submitPage(page) {\r\n");
      out.write("        const form = document.getElementById('filterForm');\r\n");
      out.write("        form.page.value = page;\r\n");
      out.write("        form.submit();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
